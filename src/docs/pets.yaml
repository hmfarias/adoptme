paths:
  /api/pets:
    get:
      tags:
        - Pets
      summary: Get all pets
      responses:
        '200':
          $ref: '#/components/responses/PetsRetrieved'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Pets
      summary: Create a new pet
      description: Creates a new pet and stores it in the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetInput'
      responses:
        '200':
          $ref: '#/components/responses/PetCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/CouldNotBeCreated'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/pets/withimage:
    post:
      tags:
        - Pets
      summary: Create a pet with an image
      description: Creates a new pet and uploads an image associated with it.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PetWithImageInput'
      responses:
        '200':
          $ref: '#/components/responses/PetCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/CouldNotBeCreated'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/pets/{pid}:
    get:
      summary: Retrieve a pet by ID
      tags:
        - Pets
      parameters:
        - in: path
          name: pid
          required: true
          description: The ID of the pet to retrieve
          schema:
            type: string
            example: '684ae0d443986cebb325e0c1'
      responses:
        '200':
          $ref: '#/components/responses/PetRetrieved'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Pets
      summary: Update an existing pet
      description: Updates a pet using its ID.
      parameters:
        - in: path
          name: pid
          required: true
          description: The ID of the pet to retrieve
          schema:
            type: string
            example: '684ae0d443986cebb325e0c1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetInput'
      responses:
        '200':
          $ref: '#/components/responses/PetUpdated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/CouldNotBeUpdated'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Pets
      summary: Delete a pet by ID
      description: Deletes a pet using its ID from the database.
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pet to delete.
      responses:
        '200':
          $ref: '#/components/responses/PetDeleted'
        '404':
          $ref: '#/components/responses/CouldNotBeDeleted'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: string
          example: 66124e590d00f563aa987b12
        name:
          type: string
          example: Fido
        specie:
          type: string
          example: dog
        birthDate:
          type: string
          format: date
          example: 2015-03-25
        adopted:
          type: boolean
          example: false
        owner:
          type: string
          nullable: true
        image:
          type: string
          example: /public/img/max.jpg
      required:
        - name
        - specie

    PetInput:
      type: object
      properties:
        name:
          type: string
          example: Luna updaded
        specie:
          type: string
          example: cat
        birthDate:
          type: string
          format: date
          example: 2018-06-12
      required:
        - name
        - specie
        - birthDate

    PetWithImageInput:
      type: object
      properties:
        name:
          type: string
          example: Max
        specie:
          type: string
          example: dog
        birthDate:
          type: string
          format: date
          example: 2020-06-15
        image:
          type: string
          format: binary
          description: Image file of the pet to be uploaded

  responses:
    PetRetrieved:
      description: Pet successfully retrieved
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: boolean
                example: false
              message:
                type: string
                example: Pet retrieved successfully
              payload:
                $ref: '#/components/schemas/Pet'

    PetsRetrieved:
      description: List of all pets
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: boolean
                example: false
              message:
                type: string
                example: Pets retrieved successfully
              payload:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'

    PetCreated:
      description: Pet created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: boolean
                example: false
              message:
                type: string
                example: Pet created successfully
              payload:
                $ref: '#/components/schemas/Pet'

    PetUpdated:
      description: Pet updated successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: boolean
                example: false
              message:
                type: string
                example: pet updated
              payload:
                $ref: '#/components/schemas/Pet'

    PetDeleted:
      description: Pet deleted successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: boolean
                example: false
              message:
                type: string
                example: Pet deleted successfully
              payload:
                $ref: '#/components/schemas/Pet'
